<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="com.bianyiit"></context:component-scan>

    <!--
        配置直接访问的资源
    -->
    <!--<security:http security="none" pattern="/pages/a.html"></security:http>
    <security:http security="none" pattern="/pages/b.html"></security:http>

    <security:http security="none" pattern="/pages/**"></security:http>-->
    <security:http security="none" pattern="/login.html"></security:http>
    <security:http security="none" pattern="/css/**"></security:http>
    <security:http security="none" pattern="/img/**"></security:http>
    <security:http security="none" pattern="/js/**"></security:http>
    <security:http security="none" pattern="/plugins/**"></security:http>
    <!--
            auto-config:自动配置，如果设置为true，表示自动应用一些默认配置，比如框架会提供一个默认的登录页面
            use-expressions:是否使用spring security提供的表达式来描述权限
        -->
    <security:http auto-config="true" use-expressions="true">
        <!--只要认证之后都能访问-->
        <security:intercept-url pattern="/pages/**" access="isAuthenticated()"></security:intercept-url>

        <!--配置拦截规则，/** 表示拦截所有请求-->
        <!--
            pattern:描述拦截规则
            asscess:指定所需的访问角色或者访问权限
        -->
        <!--<security:intercept-url pattern="/" access="hasRole('ROLE_ADMIN')"></security:intercept-url>-->
        <!--配置登录-->
        <security:form-login login-page="/login.html"
                             username-parameter="username"
                             password-parameter="password"
                             login-processing-url="/login.do"
                             default-target-url="/pages/main.html"
                             authentication-failure-forward-url="/login.html"></security:form-login>
        <!--配置退出登录-->
        <security:logout logout-success-url="/login.html"
                         logout-url="/logout.do"
                         invalidate-session="true"></security:logout>
        <!--自定义的登录界面是不安全的需要关闭过滤器-->
        <security:csrf disabled="true"></security:csrf>
        <security:headers>
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>
    </security:http>

    <!--配置认证管理器-->
    <security:authentication-manager>
        <!--配置认证提供者-->
        <security:authentication-provider user-service-ref="userService">
            <!--
                配置一个具体的用户，后期需要从数据库查询用户
                 {noop}：表示当前使用的密码为明文
             -->
            <!--<security:user-service>
                <security:user name="admin" password="{noop}1234" authorities="ROLE_ADMIN"/>
            </security:user-service>-->
            <!--引用加密策略-->
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>

        </security:authentication-provider>
    </security:authentication-manager>
    <!--开启SpringSecurity对注解的支持-->
    <security:global-method-security pre-post-annotations="enabled"></security:global-method-security>
    <bean id="userService" class="com.bianyiit.service.SpringSecurityUserService"></bean>
    <!--配置加密对象-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
    <!--配置注解支持-->
    <context:annotation-config></context:annotation-config>
    <mvc:annotation-driven></mvc:annotation-driven>
</beans>